// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol", "fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    content String @db.VarChar(255)
    authorId String
    user User @relation("Author",fields: [authorId], references: [id], onDelete: Cascade)
    originPostId String?
    originPost Post? @relation("PostComment", fields: [originPostId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    comments Post[] @relation("PostComment")
    likedBy User[]
    notifications Notification[]

    @@index([authorId])
    @@index([originPostId])
    @@fulltext([content])
}

model User {
  id String @id
  createdAt DateTime @default(now())
  username String @db.VarChar(255)
  profileImageUrl String @db.Text
  posts Post[] @relation("Author")
  likedPosts Post[]
  followers User[]  @relation(name: "Followers")
  follows   User[]  @relation(name: "Followers")
  notifications Notification[]
}

model Notification {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  fromUserId String
  from User @relation(fields: [fromUserId], references: [id], onDelete: Cascade)
  postId String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  isComment Boolean

  @@index([fromUserId])
  @@index([postId])
}
